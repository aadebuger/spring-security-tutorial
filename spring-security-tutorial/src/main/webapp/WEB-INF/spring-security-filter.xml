<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<http pattern="/resources" security="none" />
	
	<http  use-expressions="true">
	     
		  <custom-filter position="FORM_LOGIN_FILTER" ref="usernamePasswordAuthenticationFilter" />
		
		<intercept-url pattern="/login" access="permitAll"/>
		<intercept-url pattern="/logout" access="permitAll"/>
		<intercept-url pattern="/denied" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/user" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/create" method="POST"  access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/create" method="GET"  access="hasRole('ROLE_ADMIN')"/>			
		
		<!-- 
		<form-login login-page="/login" 
			authentication-failure-url="/login/failure" 
			default-target-url="/"/>
		
		<access-denied-handler error-page="/denied"/>
		
		<logout invalidate-session="true" 
			logout-success-url="/logout/success" 
			logout-url="/logout"/>
		
		
		
		 <remember-me  services-ref="rememberMeServices" key="testKeyForBlog" />
		
		-->  
	</http>
	
	<authentication-manager erase-credentials="false" alias="authenticationManager">
	    <authentication-provider ref="authenticationProvider" >
	        
	        </authentication-provider>
	    <!-- 
	        <authentication-provider user-service-ref="customUserDetailsService">
	        		<password-encoder hash="md5"/>
	        </authentication-provider>
	        -->
	</authentication-manager>
	
	<beans:bean id="authenticationProvider"
		class="org.krams.provider.LimitLoginAuthenticationProvider">
		<beans:property name="userDetailsService" ref="customUserDetailsService" />
		<!--  
		<beans:property name="userDetailsDao" ref="userDetailsDao" />
		-->
		<beans:property name="passwordEncoder" ref="encoder" />
		
	</beans:bean>
	
	  <beans:bean id="encoder"
        class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	  
	
	  
	      <beans:bean id="rememberMeServices"
          class="org.aadebuger.MyTokenBasedRememberMeServices">
  
        <beans:property name="userDetailsService" ref="customUserDetailsService" />
        <beans:property name="key" value="testKeyForBlog" />
    </beans:bean>
	   
	      
	      <beans:bean id="usernamePasswordAuthenticationFilter" class="org.aadebuger.WeixinUsernamePasswordAuthenticationFilter">
     
	          <beans:property name="authenticationManager" ref="authenticationManager" />
       <!-- 
	          <beans:property name="authenticationFailureHandler" ref="failureHandler" />
        <beans:property name="authenticationSuccessHandler" ref="successHandler" />
        <beans:property name="filterProcessesUrl" value="/processLogin" />
        -->
        
        <beans:property name="postOnly" value="true" />
    </beans:bean>
    
	      
	
	<!-- 
	<authentication-manager alias="authenticationManager"/>
	   -->
	    
</beans:beans>